{"version":3,"sources":["webpack:///./src/web/store/index.ts","webpack:///./src/web/routers/index.tsx","webpack:///./src/web/pages/App.tsx","webpack:///./src/web/index.client.tsx"],"names":["MyContext","createContext","lazy","React","Index","Login","routers","component","path","exact","auth","token","map","route","index","LazyCompon","key","render","props","to","pathname","state","location","Suspense","App","store","useLocalStore","localStorage","getItem","userInfo","setToken","window","setItem","setUserInfo","loginOut","removeItem","lodaing","className","fallback","Provider","value","basename","router","ReactDom","document","getElementById"],"mappings":"yFAAA,6CACaA,EAAYC,wBAAc,O,qGCG/BC,EAASC,OACXC,EAAQF,GAAK,kBAAM,gCACnBG,EAAQH,GAAK,kBAAM,gCAOnBI,EAAsB,CACxB,CACIC,UAAWH,EACXI,KAAK,IACLC,OAAO,EACPC,MAAM,GAEV,CACIH,UAdML,GAAK,kBAAM,gCAejBM,KAAK,SACLC,OAAO,EACPC,MAAM,GAEV,CACIH,UAAWF,EACXG,KAAK,SACLC,OAAO,IAIA,WAACE,GAAD,OACX,gBAAC,IAAD,KAEQL,EAAQM,KAAI,SAACC,EAAOC,GAAU,IACpBP,EAA2BM,EAA3BN,UAAWC,EAAgBK,EAAhBL,KAAMC,EAAUI,EAAVJ,MACjBM,EAAkBR,EACxB,OAAO,gBAAC,IAAD,CACHS,IAAKF,EACLL,MAAOA,EACPD,KAAMA,EACNS,OAAQ,SAAAC,GACJ,OAAGP,GAAwB,WAAfE,EAAML,KACP,gBAAC,IAAD,CAAUW,GAAG,OACbN,EAAMH,MAAQC,GAAwB,WAAfE,EAAML,KAC7B,gBAACO,EAAeG,GAEpB,gBAAC,IAAD,CAAUC,GAAI,CAAEC,SAAU,SAAUC,MAAO,CAAED,SAAUF,EAAMI,SAASF,qB,QC1C7FG,G,MAAapB,YA8BNqB,MA7Bf,SAAaN,GAEZ,IAAMO,EAAQC,aAAc,iBAAO,CAClCf,MAAOgB,aAAaC,QAAQ,UAAY,GACxCC,SAAU,GACVC,SAHkC,WAGX,IAAdnB,EAAc,uDAAN,KAChBc,EAAMd,MAAQA,EACdoB,OAAOJ,aAAaK,QAAQ,QAASrB,IAEtCsB,YAPkC,WAOR,IAAdJ,EAAc,uDAAH,GACtBJ,EAAMI,SAAWA,GAElBK,SAVkC,WAWjCT,EAAMd,MAAQ,GACdoB,OAAOJ,aAAaQ,WAAW,cAI3BC,EAAU,uBAAKC,UAAU,sCAAqC,qBAAGA,UAAU,qBACjF,OACC,gBAACd,EAAD,CAAUe,SAAUF,GAClB,gBAAC,IAAUG,SAAX,CAAoBC,MAAOf,GACzBA,EAAMd,OAAS,KACd,gBAAC,IAAD,CAAe8B,SAAS,KAAKC,EAAO,aC3B3CC,UAAiB,gBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"assets/script/main.282fc.bundle.js","sourcesContent":["import {createContext} from 'react';\r\nexport const MyContext = createContext(null)","\nimport * as React from 'react'\nimport { Switch, Route, RouteProps, Redirect } from 'react-router-dom';\n\nconst { lazy } = React\nconst Index = lazy(() => import(/* webpackChunkName: \"index\" */ '@pages/index'))\nconst Login = lazy(() => import(/* webpackChunkName: \"login\" */ '@pages/login'))\nconst About = lazy(() => import(/* webpackChunkName: \"about\" */ '@pages/about'))\n          \ninterface IcrmProps extends RouteProps {\n    auth?: Boolean\n}\n\nconst routers:IcrmProps[] = [\n    {\n        component: Index,\n        path:'/',\n        exact: true,\n        auth: true\n    },\n    {\n        component: About,\n        path:'/about',\n        exact: true,\n        auth: true\n    },\n    {\n        component: Login,\n        path:'/login',\n        exact: true\n    },\n]\n\nexport default (token) => (\n    <Switch>\n        {\n            routers.map((route, index) => {\n                let { component, path, exact } = route;\n                const LazyCompon: any = component;\n                return <Route \n                    key={index} \n                    exact={exact} \n                    path={path} \n                    render={props => {\n                        if(token && route.path === '/login'){\n                            return <Redirect to='/' />\n                        }else if( !route.auth || token || route.path === '/login'){\n                            return <LazyCompon {...props} />\n                        }\n                        return <Redirect to={{ pathname: '/login', state: { pathname: props.location.pathname } }} />\n                    }} \n                />\n            })\n        }\n    </Switch>\n)\n\n","import * as React from 'react'\nimport { BrowserRouter } from 'react-router-dom';\nimport { useLocalStore, observer} from 'mobx-react-lite';\nimport router from '../routers/index'\nimport { MyContext } from '../store'\nimport './App.scss'\n\nconst { Suspense } = React\nfunction App(props){\n\n\tconst store = useLocalStore(() => ({\n\t\ttoken: localStorage.getItem('token') || '',\n\t\tuserInfo: {},\n\t\tsetToken(token = null) {\n\t\t\tstore.token = token;\n\t\t\twindow.localStorage.setItem('token', token)\n\t\t},\n\t\tsetUserInfo(userInfo = {}){\n\t\t\tstore.userInfo = userInfo;\n\t\t},\n\t\tloginOut(){\n\t\t\tstore.token = '';\n\t\t\twindow.localStorage.removeItem('token');\n\t\t}\n\t}));\n\n\tconst lodaing = <div className=\"ui-loading ui-loading-primary full\"><s className=\"ui-loading-icon\"></s></div>\n\treturn (\n\t\t<Suspense fallback={lodaing}>\n\t\t \t<MyContext.Provider value={store}>\n\t\t\t \t{store.token || 'wu'}\n\t    \t\t<BrowserRouter basename=\"/\">{router('token')}</BrowserRouter>\n\t\t \t</MyContext.Provider>\n\t\t</Suspense>\n\t);\n}\n\nexport default App","import * as React from 'react'\nimport * as ReactDom from 'react-dom'\nimport App from '@pages/App';\n\nReactDom.hydrate(<App />, document.getElementById('app'))\n\nif (( module as any ).hot) {\n    ( module as any ).hot.accept();\n}"],"sourceRoot":""}